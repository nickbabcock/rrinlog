jobs:
  - job: 'Clippy'
    pool:
      vmImage: 'ubuntu-16.04'
    container: 'rust:latest'
    steps:
      - script: |
            rustup component add clippy
            cargo clippy --all
        displayName: Clippy

  - job: 'Rustfmt'
    pool:
      vmImage: 'ubuntu-16.04'
    container: 'rust:latest'
    condition: eq(variables['Build.Reason'], 'PullRequest')
    steps:
      - script: |
            rustup component add rustfmt
            cargo fmt --all -- --check
        displayName: Rustfmt

  - job: 'Test'
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          rustup_toolchain: stable
        mac-stable:
          imageName: 'macos-10.13'
          rustup_toolchain: stable
        linux-stable:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: stable
        linux-beta:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: beta
        linux-nightly:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: nightly
    pool:
      vmImage: $(imageName)
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
          echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        displayName: Install rust
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
      - script: |
            curl -sSf -o rustup-init.exe https://win.rustup.rs
            rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
            echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
        displayName: Windows install rust
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - script: cargo install diesel_cli --no-default-features --features sqlite-bundled
        displayName: Install dependencies
      - script: cargo build --all
        displayName: Cargo build
      - script: cargo test --all
        displayName: Cargo test

  - job: 'Cross'
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      matrix:
        musl:
          target: 'x86_64-unknown-linux-musl'
        freebsd:
          target: 'x86_64-unknown-freebsd'
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        displayName: Install rust
      - script: |
          D=$(mktemp -d)
          git clone https://github.com/rust-embedded/cross.git "$D"
          cd "$D"
          curl -O -L "https://gist.githubusercontent.com/nickbabcock/c7bdc8e5974ed9956abf46ffd7dc13ff/raw/e211bc17ea88e505003ad763fac7060b4ac1d8d0/patch"
          git apply patch
          cargo install --path .
          rm -rf "$D"
        displayName: Install cross
      - script: cross build --all --target $TARGET
        displayName: Build
